// RobotBuilder Version: 1.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.
package org.usfirst.frc1939.KillerRabbit;
    
import edu.wpi.first.wpilibj.Compressor;
import edu.wpi.first.wpilibj.DoubleSolenoid;
import edu.wpi.first.wpilibj.Gyro;
import edu.wpi.first.wpilibj.RobotDrive;
import edu.wpi.first.wpilibj.SpeedController;
import edu.wpi.first.wpilibj.Talon;
import edu.wpi.first.wpilibj.livewindow.LiveWindow;
/**
 * The RobotMap is a mapping from the ports sensors and actuators are wired into
 * to a variable name. This provides flexibility changing wiring, makes checking
 * the wiring easier and significantly reduces the number of magic numbers
 * floating around.
 */
public class RobotMap {
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    public static SpeedController drivetrainFrontLeft;
    public static SpeedController drivetrainFrontRight;
    public static SpeedController drivetrainBackLeft;
    public static SpeedController drivetrainBackRight;
    public static RobotDrive drivetrainRobotDrive;
    public static Gyro drivetrainGyro;
    public static SpeedController shooterFront;
    public static SpeedController shooterBack;
    public static DoubleSolenoid shooterPiston;
    public static DoubleSolenoid earsPiston;
    public static Compressor compressor1Compressor;
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    public static void init() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
        drivetrainFrontLeft = new Talon(1, 1);
	LiveWindow.addActuator("Drivetrain", "FrontLeft", (Talon) drivetrainFrontLeft);
        
        drivetrainFrontRight = new Talon(1, 2);
	LiveWindow.addActuator("Drivetrain", "FrontRight", (Talon) drivetrainFrontRight);
        
        drivetrainBackLeft = new Talon(1, 3);
	LiveWindow.addActuator("Drivetrain", "BackLeft", (Talon) drivetrainBackLeft);
        
        drivetrainBackRight = new Talon(1, 4);
	LiveWindow.addActuator("Drivetrain", "BackRight", (Talon) drivetrainBackRight);
        
        drivetrainRobotDrive = new RobotDrive(drivetrainFrontLeft, drivetrainBackLeft,
              drivetrainFrontRight, drivetrainBackRight);
	
        drivetrainRobotDrive.setSafetyEnabled(true);
        drivetrainRobotDrive.setExpiration(0.1);
        drivetrainRobotDrive.setSensitivity(0.5);
        drivetrainRobotDrive.setMaxOutput(1.0);
        drivetrainRobotDrive.setInvertedMotor(RobotDrive.MotorType.kFrontRight, true);
        drivetrainRobotDrive.setInvertedMotor(RobotDrive.MotorType.kRearRight, true);
        drivetrainGyro = new Gyro(1, 1);
	LiveWindow.addSensor("Drivetrain", "Gyro", drivetrainGyro);
        drivetrainGyro.setSensitivity(0.007);
        shooterFront = new Talon(1, 5);
	LiveWindow.addActuator("Shooter", "Front", (Talon) shooterFront);
        
        shooterBack = new Talon(1, 6);
	LiveWindow.addActuator("Shooter", "Back", (Talon) shooterBack);
        
        shooterPiston = new DoubleSolenoid(1, 1, 2);      
	
        
        earsPiston = new DoubleSolenoid(1, 3, 4);      
	
        
        compressor1Compressor = new Compressor(1, 10, 1, 1);
	
        
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
    }
}
